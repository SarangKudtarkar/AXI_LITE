$date
Fri Sep  5 02:51:13 2025
$end
$version
Riviera-PRO Version 2023.04.112.8911
$end
$timescale
1 ps
$end

$scope module axi4_lite_top_tb $end

$scope module u_axi_lite_top0 $end
$var wire 1 ! ACLK $end
$var wire 1 " ARESETN $end
$var wire 1 # read_s $end
$var wire 1 $ write_s $end
$var wire 32 % address [31:0] $end
$var wire 32 & W_data [31:0] $end
$var wire 32 ' read_data_out [31:0] $end
$var wire 1 ( read_valid_out $end
$var reg 1 ) M_ARREADY $end
$var reg 1 * S_RVALID $end
$var reg 1 + M_ARVALID $end
$var reg 1 , M_RREADY $end
$var reg 1 - S_AWREADY $end
$var reg 1 . S_BVALID $end
$var reg 1 / M_AWVALID $end
$var reg 1 0 M_BREADY $end
$var reg 1 1 M_WVALID $end
$var reg 1 2 S_WREADY $end
$var reg 32 3 M_ARADDR [31:0] $end
$var reg 32 4 M_AWADDR [31:0] $end
$var reg 32 5 M_WDATA [31:0] $end
$var reg 32 6 S_RDATA [31:0] $end
$var reg 4 7 M_WSTRB [3:0] $end
$var reg 2 8 S_RRESP [1:0] $end
$var reg 2 9 S_BRESP [1:0] $end
$var parameter 32 : DATA_WIDTH [31:0] $end
$var parameter 32 ; ADDRESS [31:0] $end

$scope module u_axi4_lite_master0 $end
$var wire 1 ! ACLK $end
$var wire 1 " ARESETN $end
$var wire 1 # START_READ $end
$var wire 1 $ START_WRITE $end
$var wire 32 % address [31:0] $end
$var wire 32 & W_data [31:0] $end
$var wire 1 < M_ARREADY $end
$var wire 32 = M_RDATA [31:0] $end
$var wire 2 > M_RRESP [1:0] $end
$var wire 1 ? M_RVALID $end
$var wire 1 @ M_AWREADY $end
$var wire 1 @ M_WREADY $end
$var wire 1 A M_BRESP $end
$var wire 1 B M_BVALID $end
$var reg 32 C M_ARADDR [31:0] $end
$var reg 1 D M_ARVALID $end
$var reg 1 E M_RREADY $end
$var reg 32 F M_AWADDR [31:0] $end
$var reg 1 G M_AWVALID $end
$var reg 32 H M_WDATA [31:0] $end
$var reg 4 I M_WSTRB [3:0] $end
$var reg 1 J M_WVALID $end
$var reg 1 K M_BREADY $end
$var reg 1 L read_start $end
$var reg 1 M write_addr $end
$var reg 1 N write_data $end
$var reg 1 O write_start $end
$var reg 3 P state $end
$var reg 3 Q next_state $end
$var parameter 32 R ADDRESS [31:0] $end
$var parameter 32 S DATA_WIDTH [31:0] $end
$upscope $end


$scope module u_axi4_lite_slave0 $end
$var wire 1 ! ACLK $end
$var wire 1 " ARESETN $end
$var wire 32 T S_ARADDR [31:0] $end
$var wire 1 U S_ARVALID $end
$var wire 1 V S_RREADY $end
$var wire 32 W S_AWADDR [31:0] $end
$var wire 1 X S_AWVALID $end
$var wire 32 Y S_WDATA [31:0] $end
$var wire 4 Z S_WSTRB [3:0] $end
$var wire 1 X S_WVALID $end
$var wire 1 [ S_BREADY $end
$var wire 1 \ S_RESP $end
$var reg 1 ] S_ARREADY $end
$var reg 32 ^ S_RDATA [31:0] $end
$var reg 2 _ S_RRESP [1:0] $end
$var reg 1 ` S_RVALID $end
$var reg 1 a S_AWREADY $end
$var reg 1 b S_WREADY $end
$var reg 1 c S_BRESP $end
$var reg 1 d S_BVALID $end
$var reg 1 e write_addr $end
$var reg 1 f write_data $end
$var reg 32 g addr [31:0] $end
$var reg 3 h state $end
$var reg 3 i next_state $end
$var integer 32 j i $end
$var parameter 32 k ADDRESS [31:0] $end
$var parameter 32 l DATA_WIDTH [31:0] $end
$var parameter 32 m no_of_registers [31:0] $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
0!
0"
0#
0$
b0 %
b0 &
bx '
x(
x)
x*
x+
x,
x-
x.
x/
x0
x1
x2
b0 3
b0 4
b0 5
bx 6
bx 7
b0 8
b0x 9
b100000 :
b100000 ;
x<
bx =
b0 >
x?
x@
x@
xA
xB
b0 C
xD
xE
b0 F
xG
b0 H
bx I
xJ
xK
xL
xM
xN
xO
bx P
b0 Q
b100000 R
b100000 S
b0 T
xU
xV
b0 W
xX
b0 Y
bx Z
xX
x[
0\
x]
bx ^
b0 _
x`
xa
xb
xc
xd
xe
xf
bx g
bx h
b0 i
bx j
b100000 k
b100000 l
b100000 m
$end
#5000
1!
b100000 j
b0 P
0L
0O
b0 h
0D
0E
0G
0J
b0 I
0K
b0 ^
0]
0`
0a
0b
0d
0+
0,
0/
01
0M
0N
b0 7
00
b0 6
0)
0*
0-
02
0e
0f
0.
0(
b0 '
0B
0@
0@
0?
0<
b0 =
0[
b0 Z
0X
0X
0V
0U
#10000
0!
#15000
1!
1"
#20000
0!
#25000
1!
#30000
0!
#35000
1!
b101011000000000000000110100 &
b101 %
1$
#40000
0!
#45000
1!
0$
1O
b1 Q
#50000
0!
#55000
1!
b1 P
0O
b101 F
1G
1J
b1111 I
1K
b101011000000000000000110100 H
b101 4
1/
11
b1111 7
10
b101011000000000000000110100 5
b101011000000000000000110100 Y
1[
b1111 Z
1X
1X
b101 W
b1 i
#60000
0!
#65000
1!
b1 h
1a
1b
1-
12
1e
1f
1@
1@
1M
1N
b10 i
b10 Q
#70000
0!
#75000
1!
1#
b10 P
b10 h
b0 F
0G
0J
b0 I
b0 H
0a
0b
1d
b0 4
0/
01
0M
0N
b0 7
b0 5
0-
02
0e
0f
1.
1B
0@
0@
b0 Y
b0 Z
0X
0X
b0 W
b0 Q
b0 i
#80000
0!
#85000
1!
0#
b0 P
1L
b0 h
0K
0d
00
0.
0B
0[
b11 Q
#90000
0!
#95000
1!
b11 P
0L
b101 C
1D
1E
b101 3
1+
1,
1V
1U
b101 T
b11 i
#100000
0!
#105000
1!
b11 h
1]
1)
1<
b100 i
b100 Q
#110000
0!
#115000
1!
b100 P
b101 g
b100 h
b0 C
0D
b101011000000000000000110100 ^
0]
1`
b0 3
0+
b101011000000000000000110100 6
0)
1*
1(
b101011000000000000000110100 '
1?
0<
b101011000000000000000110100 =
0U
b0 T
b0 Q
b0 i
#120000
0!
#125000
1!
b0 P
b0 h
0E
0`
b0 ^
0,
0*
b0 6
b0 '
0(
b0 =
0?
0V
#130000
0!
#135000
1!
b101011000000000000101010111 &
1$
#140000
0!
#145000
1!
0$
1O
b1 Q
#150000
0!
#155000
1!
b1 P
0O
b101 F
1G
1J
b1111 I
1K
b101011000000000000101010111 H
b101 4
1/
11
b1111 7
10
b101011000000000000101010111 5
b101011000000000000101010111 Y
1[
b1111 Z
1X
1X
b101 W
b1 i
#160000
0!
#165000
1!
b1 h
1a
1b
1-
12
1e
1f
1@
1@
1M
1N
b10 i
b10 Q
#170000
0!
#175000
1!
1#
b10 P
b10 h
b0 F
0G
0J
b0 I
b0 H
0a
0b
1d
b0 4
0/
01
0M
0N
b0 7
b0 5
0-
02
0e
0f
1.
1B
0@
0@
b0 Y
b0 Z
0X
0X
b0 W
b0 Q
b0 i
#180000
0!
#185000
1!
0#
b0 P
1L
b0 h
0K
0d
00
0.
0B
0[
b11 Q
#190000
0!
#195000
1!
b11 P
0L
b101 C
1D
1E
b101 3
1+
1,
1V
1U
b101 T
b11 i
#200000
0!
#205000
1!
b11 h
1]
1)
1<
b100 i
b100 Q
#210000
0!
#215000
1!
b100 P
b100 h
b0 C
0D
0]
1`
b101011000000000000101010111 ^
b0 3
0+
0)
1*
b101011000000000000101010111 6
b101011000000000000101010111 '
1(
b101011000000000000101010111 =
1?
0<
0U
b0 T
b0 Q
b0 i
#220000
0!
#225000
1!
